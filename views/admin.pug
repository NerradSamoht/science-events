extends layout

include mixins/_adminEbEventCard
include mixins/_adminEventCard
include mixins/_pagination

block content
	.inner
		h1.offscreen #{title}

		if expiredCount
			form(class="form" action="/admin/expired-events" method="POST")
				h2 Expired events #{expiredCount} 
				input(class="input button" type="submit" value="Delete all expired events" disabled=(expiredCount ===  0 ? true : false))

	.fb.fb--center
		form(id="getEbEvents" class="form-card eb__form" method="POST")
			h2 Import Eventbrite events
			p Importing events is a slow process. To avoid hitting time out errors, import no more than 5 days at a time.

			-const tomorrow = new Date(+new Date() + 86400000).toISOString().slice(0,10);
			label(class="label" for="startDate") Start date:
			input(class="input" type="date" id="startDate" name="start_date" value=`${tomorrow}` required)

			label(class="label" for="endDate") End date:
			input(class="input" type="date" id="endDate" name="end_date" required)

			input(class="input button" type="submit" class="button" formaction="/admin/get-eventbrite-events" value="Get EventBrite Events")


		form(class="form-card eb__form eb-organisations" method="POST")
			h2 Hide events
			p Any events created by organisations listed below will not display when importing events.

			if (arrayorganisationList)
				.eb-organisation-list
					ul
						each organisation in arrayorganisationList
							li= organisation

			label(class="label" for="organisationName") Enter an organisation:
			input(class="input" type="text" id="organisationName" name="organisation_name" required)

			.buttons-group
				input(type="submit" class="button button--danger" formaction="/admin/remove-from-hide-organisation-list" value="Remove")
				input(type="submit" class="button" formaction="/admin/add-to-hide-organisation-list" value="Add")

		div(class="form-card eb__form")
			h2 Statistics
			ul
				li #{userCount} registered users
				li #{currentEventsCount} current events
				li #{ebEventsPending} pending Eventbrite events
				li #{guestEventsPending} pending guest events
				li #{expiredCount} expired events

	if guestEventsPending
		h2 Guest Events Pending #{guestEventsPending}
		form(method="POST")
			.events
				each event in guestEvents	
					+adminEventCard(event)
			.inner.fb
				input(class="input button" type="submit", formaction=`/admin/approve-guest-events` value="Update Guest Events")


	if ebEventsPending
		h2 Eventbrite Events Pending #{ebEventsPending} 
		form(method="POST")
			.events
				each event in events
					+adminEbEventCard(event)
			.inner.buttons-group
				input(class="input button eb__update" type="submit", formaction=`/admin` value="Update")
				input(class="input button button--danger eb__delete" type="submit", formaction="/admin/delete-all-pending" value="Delete all EventBrite pending events")
			+pagination(page, pages, count, parentSlug)

	script(src="javascripts/admin.js")

