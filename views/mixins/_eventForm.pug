mixin eventForm(event = {})


	if user.eb_organiser_id || user.admin
		form(action=`/eb/add` method="POST" class="form form__eb card card__form")
			.fc
				//- p To import event details from Eventbrite enter the event ID number. Note you can only import events where you are register as the organiser. More information on how to find the event id can be found 
					a(href="https://www.eventbrite.co.uk/support/articles/en_US/How_To/how-to-find-the-event-id" target="_blank" rel="noopener noreferrer") here.
				label(for="ebEventId") Eventbrite event id:
				input(type="text" id="ebEventId" name="eb_event_id")
				input(type="submit" value="Get details" class="button")

	form(action=`/add/${event._id || ''}` method="POST" class="form card card__form" enctype="multipart/form-data")

		p Fields marked with an * are required.

		//- Event Name
		.fc
			label(for="event") Event name*
			input(type="text" id="event" name="name" value=event.name)

		//- Organisation Name
		.fc
			label(for="organisation") Organisation*
			input(type="text" id="organisation" name="organisation" value=event.organisation || user.organisation)

		//- Description (tinyMCE)
		.fc.text--editor
			label(for="description") Description*
			span Add a brief description of your event.
			textarea(name="description" id="description")= event.description

		.fr
			//- Start Datetime
			.fc
				label(for="start") Start date*
				input(type="date" name="start_datetime" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}" value=`${event.start_datetime ? event.start_datetime.toISOString().slice(0,10) : '' }`)

			//- End Datetime
			.fc
				label(for="end") End date
				input(type="date" id="end" name="end_datetime" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}" value=`${event.end_datetime ? event.end_datetime.toISOString().slice(0,10) : '' }`)

		//- Website
		.fc
			label(for="website") Event website
			span.helper example: https://example.com
			input(type="url" id="website" name="website" value=event.website)

		//- Price range
		div
			p If your event has different priced tickets then set the minimum and maximum price:
			.fr
				.fc
					label(for="minPrice") Price / min (£)
					input(type="number" min="0.00" max="1000.00" step="0.01" id="minPrice" name="price_range[min_price]" value=(event.price_range && event.price_range.min_price) placeholder="0.00")
				.fc
					label(for="maxRange") Max price (£)
					input(type="number" min="0.01" max="1000.00" step="0.01" id="maxRange" name="price_range[max_price]" value=(event.price_range && event.price_range.max_price) placeholder="0.00")

		//- Image upload
		.fc
			label(for="image") Image
			span If no image is uploaded then a default image will be displayed.
			input(type="file" name="image" id="image" accept="image/png, image/jpeg")
			if event.image
				if event.eb_id
					img(src=`${event.image}`, alt='' width=200)
				else
					img(src=`/uploads/${event.image}`, alt='' width=200)
		
		//- Address
		.fc
			label(for="address") Event address*
			input(type="text" id="address" name="location[address]" value=((event.location && event.location.address) || user.address) )

		//- Extra tags
		.fc
			p Check all that apply.
			- const choices = ['Family Friendly', 'Donation']
			- const tags = event.tags || []
			p
				ul.tags
					each choice in choices
						.tag.tag__choice
							input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice)))
							label(for=choice) #{choice}
			p
				.tag.tag__choice
					input(type="checkbox" id="free" name="is_free" value="true" checked=(event.is_free === "true"))
					label(for="free") Free
			
		//- Submit
		input(type="submit" value="Save" class="button")
		
	//- Delete event
	if (event._id)
		form(action=`/events/${event._id}/delete` method="POST" class="card")
			input(type="submit" value="Delete event" class="button button__danger")
